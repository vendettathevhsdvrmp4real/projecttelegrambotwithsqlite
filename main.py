from logic import *
from config import *
from logic2 import *
from telebot import TeleBot
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telebot import types
import time
import random

bot = TeleBot(API_TOKEN)

db = DatabaseManager(DATABASE)

@bot.message_handler(commands=['start'])
def start_handler(message):
        bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ [–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞/—Å–µ—Ä–≤–∏—Å–∞]. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å/–ø—Ä–æ–±–ª–µ–º—É –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏. –ù–∞—à–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Å [–£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: test].")
        bot.send_message(message.chat.id, "–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–æ, –º–Ω–µ –Ω—É–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å —Ç–≤–æ—ë –∏–º—è –¥–ª—è —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è")
        time.sleep(3)
        bot.register_next_step_handler(message,register2)

def register2(message):
    telegram_id = message.from_user.id  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    name = message.text.strip()         # —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

    try:
        # –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        db.save_user(telegram_id, name)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
        bot.send_message(message.chat.id, f"–û—Ç–ª–∏—á–Ω–æ, **{name}**! –¢–≤–æ—ë –∏–º—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ. üéâ")
        bot.send_message(message.chat.id, f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name}!")

    except Exception as e:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")



@bot.message_handler(func=lambda message: True)
def handle_message(message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã, –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –¥—Ä—É–≥–∏–º–∏ —Ö—ç–Ω–¥–ª–µ—Ä–∞–º–∏
    if message.text.startswith('/'):
        return

    user_text = message.text.strip()
    answer = get_answer(user_text)

    if answer:
        bot.reply_to(message, f"–û—Ç–≤–µ—Ç: {answer}")
    else:
        bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –Ω–∞—à—ë–ª –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å")

@bot.message_handler(commands=['help'])
def help_command(message):
     bot.reply_to(message, "/contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π ")

@bot.message_handler(commands=['contact'])
def contact_command(message):
     bot.reply_to(message, "–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π, –≤—ã–±—Ä–∞–≤ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:")
     bot.reply_tO(message, "@") #insert your tg username

if __name__ == '__main__':
    manager = DatabaseManager(DATABASE)
    bot.infinity_polling()